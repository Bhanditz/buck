sh_binary(
  name = 'packager_worker_exe',
  main = 'packager_worker.sh',
  visibility = [
    'PUBLIC',
  ],
)

worker_tool(
    name = 'packager_worker',
    exe = ':packager_worker_exe',
)

js_library(
    name = 'fruit',
    srcs = ['apple.js', 'banana.js', 'pear.js'],
    worker = ':packager_worker',
)

js_library(
    name = 'extras',
    srcs = glob(['extras/*.js']),
    extra_args = '--arbitrary extra --flags',
    worker = ':packager_worker',
)

js_library(
    name = 'fruit-salad',
    srcs = ['fruit-salad.js'],
    libs = [':fruit', ':extras'],
    worker = ':packager_worker',
)

js_library(
    name = 'build-target-output',
    srcs = ['//external:exported.js'],
    worker = ':packager_worker',
)

js_bundle(
    name = 'fruit-salad-in-a-bundle',
    libs = [':fruit-salad'],
    entry = 'fruit-salad',
    worker = ':packager_worker',
)

js_bundle(
    name = 'fruit-with-extras',
    bundle_name = 'some-fruit-with-delicious-extras.js',
    entry = ['yoghurt', 'banana', 'apple'],
    libs = [':extras', ':fruit'],
    worker = ':packager_worker',
)

genrule(
    name = 'a-genrule',
    cmd = 'echo',
    out = 'arbitrary',
)

js_bundle(
    name = 'bundle-with-genrule-dep',
    libs = [':a-genrule'],
    entry = 'arbitrary',
    worker = ':packager_worker',
)
